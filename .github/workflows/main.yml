name: TestingApp
on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened]
env:
  DEFAULT_BRANCH: dev
jobs:
#  getauthtoken:
#    runs-on: ubuntu-latest
#    outputs:
#      auth_token: ${{ steps.usetoken.outputs.auth_token }}
 checkoutrepos:
    runs-on: ubuntu-latest
    steps:
#      - name: Get Branch Name
#        id: get_branch_name
#        shell: bash
#        run: echo "ACTIVE_BRANCH_NAME=${GITHUB_REF_NAME}" >> $GITHUB_ENV
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.REPO_AUTHENTICATOR_APP_ID }}

          # Optional.
          # github_api_url: https://api.example.com

          # Optional.
          # installation_id: 1337

          # Optional.
          # Using a YAML multiline string to avoid escaping the JSON quotes.
          # permissions: >-
          #   {"members": "read"}

          private_key: ${{ secrets.REPO_AUTHENTICATOR_APP_PRIVATE_KEY }}

          # Optional.
          # repository: owner/repo
      - name: Checkout Repo A
        uses: actions/checkout@v3
        with:
         fetch-depth: 0
         path: enforcer
      - name: Get Repo B Branch
        id: get_repo_b_branch
        shell: bash
        run: !
           branchCheck=`if [ -z "$(git ls-remote --heads origin ${{GITHUB_REF_NAME}})" ]; then echo ${{DEFAULT_BRANCH}}; else echo ${{GITHUB_REF_NAME}}; fi`
           echo ${branchCheck}
      - name: Checkout Repo B
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          repository: monkeyplayground/secondaryrepo
          token: ${{ steps.generate_token.outputs.token }}
          path: secondary
#      - name: Use token
#        id: usetoken
#        env:
#          AUTH_TOKEN: ${{ steps.generate_token.outputs.token }}
#        run: |
#          echo "The generated token is masked: ${AUTH_TOKEN}"
#        run: |
#           echo "auth_token=${{ steps.generate_token.outputs.token }}" >> $GITHUB_OUTPUT
#  build:
#    runs-on: ubuntu-latest
#    needs: getauthtoken
#    steps:
#      - name: ConfirmOK
#        env:
#          AUTH_TOKEN: ${{needs.getauthtoken.outputs.auth_token}}
#        run: |
#          echo "Came through: ${AUTH_TOKEN}"
#      - name: Checkout Repo A
#        uses: actions/checkout@v2
#        with:
#         fetch-depth: 0
#      - name: Checkout Repo B
#        uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#          repository: monkeyplayground/secondaryrepo
#          token: ${{needs.getauthtoken.outputs.auth_token}}
